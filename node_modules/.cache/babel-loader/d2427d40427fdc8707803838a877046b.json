{"ast":null,"code":"import { ADD_CART_ITEM, REMOVE_CART_ITEM } from \"./actions\";\n\nconst cartReducer = (state, action) => {\n  switch (action.type) {\n    case ADD_CART_ITEM:\n      let updatedItems = [];\n      let existingItem = state.items.find(item => item.id === action.payload.id);\n\n      if (existingItem) {\n        existingItem = { ...existingItem,\n          amount: existingItem.amount + action.payload.amount\n        };\n        updatedItems = [...updatedItems, existingItem];\n        console.log(\"updatedItems===added\");\n        console.log(updatedItems);\n        console.log(\"updatedItems===added\");\n      } else updatedItems = state.items.concat(action.payload);\n\n      const updatedTotalAmount = state.totalAmount + action.payload.price * action.payload.amount;\n      return {\n        items: updatedItems,\n        totalAmount: updatedTotalAmount\n      };\n\n    case REMOVE_CART_ITEM:\n      let newItems = [...state.items];\n      let newItem = state.items.find(item => item.id === action.payload);\n\n      if (newItem.amount === 1) {\n        newItems = state.items.filter(item => item.id !== action.payload);\n        console.log(\"updated===\");\n        console.log(action.payload);\n      } else {\n        const updatedItemIndex = newItems.findIndex(item => item.id === action.payload);\n        console.log(action.payload);\n        console.log(\"updatedItemIndex===\");\n        console.log(updatedItemIndex);\n        newItem = { ...newItem,\n          amount: newItem.amount - 1\n        };\n        newItems[updatedItemIndex] = newItem;\n      }\n\n      const newTotalAmount = state.totalAmount - newItem.price;\n      return {\n        items: newItems,\n        totalAmount: newTotalAmount\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default cartReducer;","map":{"version":3,"names":["ADD_CART_ITEM","REMOVE_CART_ITEM","cartReducer","state","action","type","updatedItems","existingItem","items","find","item","id","payload","amount","console","log","concat","updatedTotalAmount","totalAmount","price","newItems","newItem","filter","updatedItemIndex","findIndex","newTotalAmount"],"sources":["/Users/sarah/Documents/Projects/Food/src/store/cartReducer.js"],"sourcesContent":["import { ADD_CART_ITEM, REMOVE_CART_ITEM } from \"./actions\";\n\nconst cartReducer = (state, action) => {\n  switch (action.type) {\n    case ADD_CART_ITEM:\n      let updatedItems = [];\n\n      let existingItem = state.items.find(\n        (item) => item.id === action.payload.id\n      );\n\n      if (existingItem) {\n        existingItem = {\n          ...existingItem,\n          amount: existingItem.amount + action.payload.amount,\n        };\n        updatedItems = [...updatedItems, existingItem];\n        console.log(\"updatedItems===added\");\n        console.log(updatedItems);\n        console.log(\"updatedItems===added\");\n      } else updatedItems = state.items.concat(action.payload);\n\n      const updatedTotalAmount =\n        state.totalAmount + action.payload.price * action.payload.amount;\n      return {\n        items: updatedItems,\n        totalAmount: updatedTotalAmount,\n      };\n    case REMOVE_CART_ITEM:\n      let newItems = [...state.items];\n      let newItem = state.items.find((item) => item.id === action.payload);\n      if (newItem.amount === 1) {\n        newItems = state.items.filter((item) => item.id !== action.payload);\n        console.log(\"updated===\");\n        console.log(action.payload);\n      } else {\n        const updatedItemIndex = newItems.findIndex(\n          (item) => item.id === action.payload\n        );\n        console.log(action.payload);\n\n        console.log(\"updatedItemIndex===\");\n        console.log(updatedItemIndex);\n\n        newItem = { ...newItem, amount: newItem.amount - 1 };\n        newItems[updatedItemIndex] = newItem;\n      }\n\n      const newTotalAmount = state.totalAmount - newItem.price;\n\n      return {\n        items: newItems,\n        totalAmount: newTotalAmount,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default cartReducer;\n"],"mappings":"AAAA,SAASA,aAAT,EAAwBC,gBAAxB,QAAgD,WAAhD;;AAEA,MAAMC,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;EACrC,QAAQA,MAAM,CAACC,IAAf;IACE,KAAKL,aAAL;MACE,IAAIM,YAAY,GAAG,EAAnB;MAEA,IAAIC,YAAY,GAAGJ,KAAK,CAACK,KAAN,CAAYC,IAAZ,CAChBC,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYP,MAAM,CAACQ,OAAP,CAAeD,EADpB,CAAnB;;MAIA,IAAIJ,YAAJ,EAAkB;QAChBA,YAAY,GAAG,EACb,GAAGA,YADU;UAEbM,MAAM,EAAEN,YAAY,CAACM,MAAb,GAAsBT,MAAM,CAACQ,OAAP,CAAeC;QAFhC,CAAf;QAIAP,YAAY,GAAG,CAAC,GAAGA,YAAJ,EAAkBC,YAAlB,CAAf;QACAO,OAAO,CAACC,GAAR,CAAY,sBAAZ;QACAD,OAAO,CAACC,GAAR,CAAYT,YAAZ;QACAQ,OAAO,CAACC,GAAR,CAAY,sBAAZ;MACD,CATD,MASOT,YAAY,GAAGH,KAAK,CAACK,KAAN,CAAYQ,MAAZ,CAAmBZ,MAAM,CAACQ,OAA1B,CAAf;;MAEP,MAAMK,kBAAkB,GACtBd,KAAK,CAACe,WAAN,GAAoBd,MAAM,CAACQ,OAAP,CAAeO,KAAf,GAAuBf,MAAM,CAACQ,OAAP,CAAeC,MAD5D;MAEA,OAAO;QACLL,KAAK,EAAEF,YADF;QAELY,WAAW,EAAED;MAFR,CAAP;;IAIF,KAAKhB,gBAAL;MACE,IAAImB,QAAQ,GAAG,CAAC,GAAGjB,KAAK,CAACK,KAAV,CAAf;MACA,IAAIa,OAAO,GAAGlB,KAAK,CAACK,KAAN,CAAYC,IAAZ,CAAkBC,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYP,MAAM,CAACQ,OAA9C,CAAd;;MACA,IAAIS,OAAO,CAACR,MAAR,KAAmB,CAAvB,EAA0B;QACxBO,QAAQ,GAAGjB,KAAK,CAACK,KAAN,CAAYc,MAAZ,CAAoBZ,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYP,MAAM,CAACQ,OAAhD,CAAX;QACAE,OAAO,CAACC,GAAR,CAAY,YAAZ;QACAD,OAAO,CAACC,GAAR,CAAYX,MAAM,CAACQ,OAAnB;MACD,CAJD,MAIO;QACL,MAAMW,gBAAgB,GAAGH,QAAQ,CAACI,SAAT,CACtBd,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYP,MAAM,CAACQ,OADN,CAAzB;QAGAE,OAAO,CAACC,GAAR,CAAYX,MAAM,CAACQ,OAAnB;QAEAE,OAAO,CAACC,GAAR,CAAY,qBAAZ;QACAD,OAAO,CAACC,GAAR,CAAYQ,gBAAZ;QAEAF,OAAO,GAAG,EAAE,GAAGA,OAAL;UAAcR,MAAM,EAAEQ,OAAO,CAACR,MAAR,GAAiB;QAAvC,CAAV;QACAO,QAAQ,CAACG,gBAAD,CAAR,GAA6BF,OAA7B;MACD;;MAED,MAAMI,cAAc,GAAGtB,KAAK,CAACe,WAAN,GAAoBG,OAAO,CAACF,KAAnD;MAEA,OAAO;QACLX,KAAK,EAAEY,QADF;QAELF,WAAW,EAAEO;MAFR,CAAP;;IAIF;MACE,OAAOtB,KAAP;EApDJ;AAsDD,CAvDD;;AAyDA,eAAeD,WAAf"},"metadata":{},"sourceType":"module"}