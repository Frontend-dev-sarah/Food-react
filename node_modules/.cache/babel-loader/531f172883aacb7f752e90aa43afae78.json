{"ast":null,"code":"import { ADD_CART_ITEM, CLEAR_CART_ITEM, REMOVE_CART_ITEM } from \"./actions\";\n\nconst cartReducer = (state, action) => {\n  switch (action.type) {\n    case ADD_CART_ITEM:\n      let updatedItems = [];\n      let existingItem = state.items.find(item => item.id === action.payload.id);\n\n      if (existingItem) {\n        const existingItemIndex = state.items.findIndex(item => item.id === action.payload.id);\n        console.log(\"existingItemIndex\");\n        console.log(existingItemIndex);\n        existingItem = { ...existingItem,\n          amount: existingItem.amount + action.payload.amount\n        };\n        updatedItems = [...state.items];\n        updatedItems[existingItemIndex] = existingItem;\n      } else updatedItems = state.items.concat(action.payload);\n\n      const updatedTotalAmount = state.totalAmount + action.payload.price * action.payload.amount;\n      return {\n        items: updatedItems,\n        totalAmount: updatedTotalAmount\n      };\n\n    case REMOVE_CART_ITEM:\n      let newItems = [];\n      let newItem = state.items.find(item => item.id === action.payload);\n\n      if (newItem.amount === 1) {\n        newItems = state.items.filter(item => item.id !== action.payload);\n      } else {\n        const updatedItemIndex = state.items.findIndex(item => item.id === action.payload);\n        newItem = { ...newItem,\n          amount: newItem.amount - 1\n        };\n        newItems = [...state.items];\n        newItems[updatedItemIndex] = newItem;\n      }\n\n      const newTotalAmount = state.totalAmount - newItem.price;\n      return {\n        items: newItems,\n        totalAmount: newTotalAmount\n      };\n\n    case CLEAR_CART_ITEM:\n      return {\n        items: []\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default cartReducer;","map":{"version":3,"names":["ADD_CART_ITEM","CLEAR_CART_ITEM","REMOVE_CART_ITEM","cartReducer","state","action","type","updatedItems","existingItem","items","find","item","id","payload","existingItemIndex","findIndex","console","log","amount","concat","updatedTotalAmount","totalAmount","price","newItems","newItem","filter","updatedItemIndex","newTotalAmount"],"sources":["/Users/sarah/Documents/Projects/Food/src/store/cartReducer.js"],"sourcesContent":["import { ADD_CART_ITEM, CLEAR_CART_ITEM, REMOVE_CART_ITEM } from \"./actions\";\n\nconst cartReducer = (state, action) => {\n  switch (action.type) {\n    case ADD_CART_ITEM:\n      let updatedItems = [];\n\n      let existingItem = state.items.find(\n        (item) => item.id === action.payload.id\n      );\n\n      if (existingItem) {\n        const existingItemIndex = state.items.findIndex(\n          (item) => item.id === action.payload.id\n        );\n\n        console.log(\"existingItemIndex\");\n        console.log(existingItemIndex);\n        existingItem = {\n          ...existingItem,\n          amount: existingItem.amount + action.payload.amount,\n        };\n        updatedItems = [...state.items];\n        updatedItems[existingItemIndex] = existingItem;\n      } else updatedItems = state.items.concat(action.payload);\n\n      const updatedTotalAmount =\n        state.totalAmount + action.payload.price * action.payload.amount;\n      return {\n        items: updatedItems,\n        totalAmount: updatedTotalAmount,\n      };\n    case REMOVE_CART_ITEM:\n      let newItems = [];\n      let newItem = state.items.find((item) => item.id === action.payload);\n      if (newItem.amount === 1) {\n        newItems = state.items.filter((item) => item.id !== action.payload);\n      } else {\n        const updatedItemIndex = state.items.findIndex(\n          (item) => item.id === action.payload\n        );\n        newItem = { ...newItem, amount: newItem.amount - 1 };\n        newItems = [...state.items];\n        newItems[updatedItemIndex] = newItem;\n      }\n\n      const newTotalAmount = state.totalAmount - newItem.price;\n\n      return {\n        items: newItems,\n        totalAmount: newTotalAmount,\n      };\n    case CLEAR_CART_ITEM:\n      return {\n        items: [],\n      };\n    default:\n      return state;\n  }\n};\n\nexport default cartReducer;\n"],"mappings":"AAAA,SAASA,aAAT,EAAwBC,eAAxB,EAAyCC,gBAAzC,QAAiE,WAAjE;;AAEA,MAAMC,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;EACrC,QAAQA,MAAM,CAACC,IAAf;IACE,KAAKN,aAAL;MACE,IAAIO,YAAY,GAAG,EAAnB;MAEA,IAAIC,YAAY,GAAGJ,KAAK,CAACK,KAAN,CAAYC,IAAZ,CAChBC,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYP,MAAM,CAACQ,OAAP,CAAeD,EADpB,CAAnB;;MAIA,IAAIJ,YAAJ,EAAkB;QAChB,MAAMM,iBAAiB,GAAGV,KAAK,CAACK,KAAN,CAAYM,SAAZ,CACvBJ,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYP,MAAM,CAACQ,OAAP,CAAeD,EADb,CAA1B;QAIAI,OAAO,CAACC,GAAR,CAAY,mBAAZ;QACAD,OAAO,CAACC,GAAR,CAAYH,iBAAZ;QACAN,YAAY,GAAG,EACb,GAAGA,YADU;UAEbU,MAAM,EAAEV,YAAY,CAACU,MAAb,GAAsBb,MAAM,CAACQ,OAAP,CAAeK;QAFhC,CAAf;QAIAX,YAAY,GAAG,CAAC,GAAGH,KAAK,CAACK,KAAV,CAAf;QACAF,YAAY,CAACO,iBAAD,CAAZ,GAAkCN,YAAlC;MACD,CAbD,MAaOD,YAAY,GAAGH,KAAK,CAACK,KAAN,CAAYU,MAAZ,CAAmBd,MAAM,CAACQ,OAA1B,CAAf;;MAEP,MAAMO,kBAAkB,GACtBhB,KAAK,CAACiB,WAAN,GAAoBhB,MAAM,CAACQ,OAAP,CAAeS,KAAf,GAAuBjB,MAAM,CAACQ,OAAP,CAAeK,MAD5D;MAEA,OAAO;QACLT,KAAK,EAAEF,YADF;QAELc,WAAW,EAAED;MAFR,CAAP;;IAIF,KAAKlB,gBAAL;MACE,IAAIqB,QAAQ,GAAG,EAAf;MACA,IAAIC,OAAO,GAAGpB,KAAK,CAACK,KAAN,CAAYC,IAAZ,CAAkBC,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYP,MAAM,CAACQ,OAA9C,CAAd;;MACA,IAAIW,OAAO,CAACN,MAAR,KAAmB,CAAvB,EAA0B;QACxBK,QAAQ,GAAGnB,KAAK,CAACK,KAAN,CAAYgB,MAAZ,CAAoBd,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYP,MAAM,CAACQ,OAAhD,CAAX;MACD,CAFD,MAEO;QACL,MAAMa,gBAAgB,GAAGtB,KAAK,CAACK,KAAN,CAAYM,SAAZ,CACtBJ,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYP,MAAM,CAACQ,OADN,CAAzB;QAGAW,OAAO,GAAG,EAAE,GAAGA,OAAL;UAAcN,MAAM,EAAEM,OAAO,CAACN,MAAR,GAAiB;QAAvC,CAAV;QACAK,QAAQ,GAAG,CAAC,GAAGnB,KAAK,CAACK,KAAV,CAAX;QACAc,QAAQ,CAACG,gBAAD,CAAR,GAA6BF,OAA7B;MACD;;MAED,MAAMG,cAAc,GAAGvB,KAAK,CAACiB,WAAN,GAAoBG,OAAO,CAACF,KAAnD;MAEA,OAAO;QACLb,KAAK,EAAEc,QADF;QAELF,WAAW,EAAEM;MAFR,CAAP;;IAIF,KAAK1B,eAAL;MACE,OAAO;QACLQ,KAAK,EAAE;MADF,CAAP;;IAGF;MACE,OAAOL,KAAP;EAtDJ;AAwDD,CAzDD;;AA2DA,eAAeD,WAAf"},"metadata":{},"sourceType":"module"}