{"ast":null,"code":"var _jsxFileName = \"/Users/sarah/Documents/Projects/Food/src/components/Meals/MealItems/MealItemForm.js\",\n    _s = $RefreshSig$();\n\nimport { useContext, useState, useRef } from \"react\";\nimport CartContext from \"../../../store/cartContext\";\nimport Input from \"../../UI/Input\";\nimport classes from \"./MealItemForm.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MealItemForm = props => {\n  _s();\n\n  const cartContext = useContext(CartContext);\n  const [isValid, setIsvalid] = useState(false);\n  const amountRef = useRef();\n\n  const onSubmitHandler = event => {\n    event.preventDefault();\n    const amount = amountRef.current.value; //even type of data is number, its value is always a string\n\n    const enteredAmount = +amount; // transform string to number\n\n    if (amount.trim().length === 0 || enteredAmount < 1 || enteredAmount > 5) {\n      setIsvalid(false);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: classes.form,\n    onSubmit: onSubmitHandler,\n    children: [/*#__PURE__*/_jsxDEV(Input, {\n      ref: amountRef,\n      lable: \"Amount\",\n      input: {\n        id: \"amount+\" + props.id,\n        type: \"number\",\n        min: \"1\",\n        max: \"5\",\n        step: \"1\",\n        defaultValue: \"1\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"+ Add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), !isValid && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Please provide a valid amount, enter 1 and 5\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 20\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MealItemForm, \"bvKQjuBJU8lAGz/0+pdqp8qatbE=\");\n\n_c = MealItemForm;\nexport default MealItemForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"MealItemForm\");","map":{"version":3,"names":["useContext","useState","useRef","CartContext","Input","classes","MealItemForm","props","cartContext","isValid","setIsvalid","amountRef","onSubmitHandler","event","preventDefault","amount","current","value","enteredAmount","trim","length","form","id","type","min","max","step","defaultValue"],"sources":["/Users/sarah/Documents/Projects/Food/src/components/Meals/MealItems/MealItemForm.js"],"sourcesContent":["import { useContext, useState, useRef } from \"react\";\nimport CartContext from \"../../../store/cartContext\";\nimport Input from \"../../UI/Input\";\nimport classes from \"./MealItemForm.module.css\";\n\nconst MealItemForm = (props) => {\n  const cartContext = useContext(CartContext);\n  const [isValid, setIsvalid] = useState(false);\n  const amountRef = useRef();\n\n  const onSubmitHandler = (event) => {\n    event.preventDefault();\n\n    const amount = amountRef.current.value; //even type of data is number, its value is always a string\n    const enteredAmount = +amount; // transform string to number\n\n    if (amount.trim().length === 0 || enteredAmount < 1 || enteredAmount > 5) {\n      setIsvalid(false);\n    }\n  };\n  return (\n    <form className={classes.form} onSubmit={onSubmitHandler}>\n      <Input\n        ref={amountRef}\n        lable=\"Amount\"\n        input={{\n          id: \"amount+\" + props.id,\n          type: \"number\",\n          min: \"1\",\n          max: \"5\",\n          step: \"1\",\n          defaultValue: \"1\",\n        }}\n      />\n      <button>+ Add</button>\n      {!isValid && <p>Please provide a valid amount, enter 1 and 5</p>}\n    </form>\n  );\n};\n\nexport default MealItemForm;\n"],"mappings":";;;AAAA,SAASA,UAAT,EAAqBC,QAArB,EAA+BC,MAA/B,QAA6C,OAA7C;AACA,OAAOC,WAAP,MAAwB,4BAAxB;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,OAAOC,OAAP,MAAoB,2BAApB;;;AAEA,MAAMC,YAAY,GAAIC,KAAD,IAAW;EAAA;;EAC9B,MAAMC,WAAW,GAAGR,UAAU,CAACG,WAAD,CAA9B;EACA,MAAM,CAACM,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC,KAAD,CAAtC;EACA,MAAMU,SAAS,GAAGT,MAAM,EAAxB;;EAEA,MAAMU,eAAe,GAAIC,KAAD,IAAW;IACjCA,KAAK,CAACC,cAAN;IAEA,MAAMC,MAAM,GAAGJ,SAAS,CAACK,OAAV,CAAkBC,KAAjC,CAHiC,CAGO;;IACxC,MAAMC,aAAa,GAAG,CAACH,MAAvB,CAJiC,CAIF;;IAE/B,IAAIA,MAAM,CAACI,IAAP,GAAcC,MAAd,KAAyB,CAAzB,IAA8BF,aAAa,GAAG,CAA9C,IAAmDA,aAAa,GAAG,CAAvE,EAA0E;MACxER,UAAU,CAAC,KAAD,CAAV;IACD;EACF,CATD;;EAUA,oBACE;IAAM,SAAS,EAAEL,OAAO,CAACgB,IAAzB;IAA+B,QAAQ,EAAET,eAAzC;IAAA,wBACE,QAAC,KAAD;MACE,GAAG,EAAED,SADP;MAEE,KAAK,EAAC,QAFR;MAGE,KAAK,EAAE;QACLW,EAAE,EAAE,YAAYf,KAAK,CAACe,EADjB;QAELC,IAAI,EAAE,QAFD;QAGLC,GAAG,EAAE,GAHA;QAILC,GAAG,EAAE,GAJA;QAKLC,IAAI,EAAE,GALD;QAMLC,YAAY,EAAE;MANT;IAHT;MAAA;MAAA;MAAA;IAAA,QADF,eAaE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAbF,EAcG,CAAClB,OAAD,iBAAY;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAdf;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAkBD,CAjCD;;GAAMH,Y;;KAAAA,Y;AAmCN,eAAeA,YAAf"},"metadata":{},"sourceType":"module"}